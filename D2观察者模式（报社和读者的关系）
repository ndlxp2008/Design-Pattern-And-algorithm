抽象/封装/继承/多态

多用组合，少用继承

封装变化

为了交互对象的松耦合设计而努力

 1.标识耦合： 实体A 知道 实体B的存在，但不知道实体B怎么使用（即不会调用实体B的任何方法）
 在这种耦合情况下，实体B如果被删除掉，会影响实体A的编译，但是修改实体B的方法或实现，对实体A没有影响。
   标示耦合是最基本的耦合，大量存在系统中。
   可以通过组合的方式，比如实体有变量包含实体B或者实体B的集合。
   实际场景：订单子项表中关联产品实体表，表示该订单子项对应相应的商品。

2.表示耦合： 实体A 除了知道实体B存在，还调用了实体B的方法。
   在这种情况下，实体B的接口如果修改，比如更名、增减参数，会影响实体A的编译。这时就是表示耦合。
   表示耦合比较常见，好坏视同实际场景。
 实际场景：订单子项表调用了ProductPo的getPrice（获取价格）来计算该项目的总价。
 
 
 
出版者+订阅者=观察者模式

出版者：Subject
订阅者：Observer

观察者模式：定义了对象之间的一对多依赖，当一个对象改变状态时，它的所有依赖者都会收到通知并自动更新。





